/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dia.umpire.gui;

import dia.umpire.exceptions.ParsingException;
import dia.umpire.params.CometParams;
import dia.umpire.params.ThisAppProps;
import dia.umpire.params.UmpireParams;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map.Entry;
import java.util.Properties;
import java.util.TreeMap;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author dattam
 */
public class UmpireUnargetedDbSearchFrame extends javax.swing.JFrame {

    /**
     * Creates new form UmpireUnargetedDbSearchPanel
     */
    public UmpireUnargetedDbSearchFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabPane = new javax.swing.JTabbedPane();
        panelInTabSelectFiles = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaSelectedFiles = new javax.swing.JTextArea();
        btnSelectRawFiles = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        panelInTabSeParams = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        chkAdjustFragIntensity = new javax.swing.JCheckBox();
        chkBoostComplementaryIon = new javax.swing.JCheckBox();
        fmtRPmax = new javax.swing.JFormattedTextField();
        fmtRFmax = new javax.swing.JFormattedTextField();
        fmtCorrThreshold = new javax.swing.JFormattedTextField();
        fmtDeltaApex = new javax.swing.JFormattedTextField();
        fmtRTOverlap = new javax.swing.JFormattedTextField();
        txtSelectedFile = new javax.swing.JTextField();
        btnSelectUmpireParamFile = new javax.swing.JButton();
        panelSeParams = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        fmtMS1PPM = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        fmtMS2PPM = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        fmtSN = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        fmtMS2SN = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        fmtMinMSIntensity = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        fmtMinMSMSIntensity = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        fmtMaxCurveRTRange = new javax.swing.JFormattedTextField();
        lblNoMissedScan = new javax.swing.JLabel();
        fmtNoMissedScan = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        fmtMinFrag = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        fmtMinNoPeakCluster = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        fmtMaxNoPeakCluster = new javax.swing.JFormattedTextField();
        chkEstimateBG = new javax.swing.JCheckBox();
        jLabel19 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        fmtWindowSize = new javax.swing.JFormattedTextField();
        panelInTabCometParams = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnBrowseDatabasePath = new javax.swing.JButton();
        txtDatabasePath = new javax.swing.JTextField();
        btnSelectCometParamsFile = new javax.swing.JButton();
        txtCometParamsFile = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        fmtpeptide_mass_tolerance = new javax.swing.JFormattedTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        fmtfragment_bin_tol = new javax.swing.JFormattedTextField();
        jLabel22 = new javax.swing.JLabel();
        fmtfragment_bin_offset = new javax.swing.JFormattedTextField();
        jLabel23 = new javax.swing.JLabel();
        fmttheoretical_fragment_ions = new javax.swing.JFormattedTextField();
        panelRun = new javax.swing.JPanel();
        btnRun = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnClearConsole = new javax.swing.JButton();
        consoleScrollPane = new javax.swing.JScrollPane();
        console = new dia.umpire.gui.TextConsole();
        DefaultCaret caret = (DefaultCaret) console.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        jLabel24 = new javax.swing.JLabel();
        spinnerRam = new javax.swing.JSpinner();
        jLabel25 = new javax.swing.JLabel();
        spinnerThreads = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabPane.setToolTipText("");
        tabPane.setName(""); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Selected files"));

        txtAreaSelectedFiles.setColumns(20);
        txtAreaSelectedFiles.setRows(5);
        txtAreaSelectedFiles.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtAreaSelectedFiles.setEnabled(false);
        jScrollPane1.setViewportView(txtAreaSelectedFiles);

        btnSelectRawFiles.setText("Add files");
        btnSelectRawFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectRawFilesActionPerformed(evt);
            }
        });

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnSelectRawFiles)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelectRawFiles)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        javax.swing.GroupLayout panelInTabSelectFilesLayout = new javax.swing.GroupLayout(panelInTabSelectFiles);
        panelInTabSelectFiles.setLayout(panelInTabSelectFilesLayout);
        panelInTabSelectFilesLayout.setHorizontalGroup(
            panelInTabSelectFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInTabSelectFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelInTabSelectFilesLayout.setVerticalGroup(
            panelInTabSelectFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInTabSelectFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabPane.addTab("Select Raw Files", panelInTabSelectFiles);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Fragment grouping"));

        jLabel1.setText("RPmax");

        jLabel2.setText("RFmax");
        jLabel2.setToolTipText("");

        jLabel3.setText("CorrThreshold");

        jLabel4.setText("DeltaApex");

        jLabel5.setText("RTOverlap");

        chkAdjustFragIntensity.setText("AdjustFragIntensity");
        chkAdjustFragIntensity.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        chkBoostComplementaryIon.setText("BoostComplementaryIon");
        chkBoostComplementaryIon.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        fmtRPmax.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        fmtRPmax.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtRPmax.setPreferredSize(new java.awt.Dimension(50, 20));

        fmtRFmax.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtRFmax.setPreferredSize(new java.awt.Dimension(50, 20));
        fmtRFmax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fmtRFmaxActionPerformed(evt);
            }
        });

        fmtCorrThreshold.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        fmtCorrThreshold.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtCorrThreshold.setPreferredSize(new java.awt.Dimension(50, 20));

        fmtDeltaApex.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtDeltaApex.setPreferredSize(new java.awt.Dimension(50, 20));

        fmtRTOverlap.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtRTOverlap.setPreferredSize(new java.awt.Dimension(50, 20));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(fmtRTOverlap, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkAdjustFragIntensity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkBoostComplementaryIon))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(fmtRPmax, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fmtRFmax, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fmtCorrThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fmtDeltaApex, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(fmtRPmax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fmtRFmax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fmtCorrThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fmtDeltaApex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(chkAdjustFragIntensity)
                    .addComponent(chkBoostComplementaryIon)
                    .addComponent(fmtRTOverlap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btnSelectUmpireParamFile.setText("Browse");
        btnSelectUmpireParamFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectUmpireParamFileActionPerformed(evt);
            }
        });

        panelSeParams.setBorder(javax.swing.BorderFactory.createTitledBorder("Singnal Extraction (SE) params"));

        jLabel6.setText("MS1PPM");

        fmtMS1PPM.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        fmtMS1PPM.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtMS1PPM.setPreferredSize(new java.awt.Dimension(50, 20));

        jLabel7.setText("MS2PPM");

        fmtMS2PPM.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        fmtMS2PPM.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtMS2PPM.setPreferredSize(new java.awt.Dimension(50, 20));

        jLabel8.setText("SN");

        fmtSN.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        fmtSN.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtSN.setPreferredSize(new java.awt.Dimension(50, 20));

        jLabel9.setText("MS2SN");

        fmtMS2SN.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtMS2SN.setPreferredSize(new java.awt.Dimension(50, 20));

        jLabel10.setText("MinMSIntensity");

        fmtMinMSIntensity.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtMinMSIntensity.setPreferredSize(new java.awt.Dimension(50, 20));

        jLabel11.setText("MinMSMSIntensity");

        fmtMinMSMSIntensity.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtMinMSMSIntensity.setPreferredSize(new java.awt.Dimension(50, 20));

        jLabel12.setText("MaxCurveRTRange");

        fmtMaxCurveRTRange.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtMaxCurveRTRange.setPreferredSize(new java.awt.Dimension(50, 20));

        lblNoMissedScan.setText("Num. MissedScan");

        fmtNoMissedScan.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        fmtNoMissedScan.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtNoMissedScan.setPreferredSize(new java.awt.Dimension(50, 20));

        jLabel13.setText("MinFrag");

        fmtMinFrag.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        fmtMinFrag.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtMinFrag.setPreferredSize(new java.awt.Dimension(50, 20));

        jLabel15.setText("MinNoPeakCluster");

        fmtMinNoPeakCluster.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtMinNoPeakCluster.setPreferredSize(new java.awt.Dimension(50, 20));
        fmtMinNoPeakCluster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fmtMinNoPeakClusterActionPerformed(evt);
            }
        });

        jLabel16.setText("MaxNoPeakCluster");

        fmtMaxNoPeakCluster.setToolTipText("");
        fmtMaxNoPeakCluster.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtMaxNoPeakCluster.setPreferredSize(new java.awt.Dimension(50, 20));

        chkEstimateBG.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        chkEstimateBG.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        jLabel19.setText("EstimateBG");

        javax.swing.GroupLayout panelSeParamsLayout = new javax.swing.GroupLayout(panelSeParams);
        panelSeParams.setLayout(panelSeParamsLayout);
        panelSeParamsLayout.setHorizontalGroup(
            panelSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSeParamsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel6)
                    .addComponent(lblNoMissedScan)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fmtMS1PPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fmtMinMSIntensity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fmtNoMissedScan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fmtMinNoPeakCluster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(10, 10, 10)
                .addGroup(panelSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fmtMaxNoPeakCluster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelSeParamsLayout.createSequentialGroup()
                        .addGroup(panelSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fmtMS2PPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fmtMinMSMSIntensity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fmtMinFrag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel12)
                            .addComponent(jLabel9)
                            .addComponent(jLabel19))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fmtSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fmtMaxCurveRTRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fmtMS2SN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkEstimateBG, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelSeParamsLayout.setVerticalGroup(
            panelSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSeParamsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(fmtMS1PPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(fmtMS2PPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(fmtSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(fmtMinMSMSIntensity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(fmtMinMSIntensity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(fmtMaxCurveRTRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkEstimateBG, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNoMissedScan)
                        .addComponent(fmtNoMissedScan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)
                        .addComponent(fmtMinFrag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19)))
                .addGap(18, 18, 18)
                .addGroup(panelSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(fmtMinNoPeakCluster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(fmtMaxNoPeakCluster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(fmtMS2SN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Swath window params"));

        jLabel17.setText("WindowType");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SWATH" }));

        jLabel18.setText("WindowSize");

        fmtWindowSize.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        fmtWindowSize.setText("25");
        fmtWindowSize.setToolTipText("");
        fmtWindowSize.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtWindowSize.setPreferredSize(new java.awt.Dimension(50, 20));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fmtWindowSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(fmtWindowSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelInTabSeParamsLayout = new javax.swing.GroupLayout(panelInTabSeParams);
        panelInTabSeParams.setLayout(panelInTabSeParamsLayout);
        panelInTabSeParamsLayout.setHorizontalGroup(
            panelInTabSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInTabSeParamsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInTabSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelSeParams, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelInTabSeParamsLayout.createSequentialGroup()
                        .addComponent(txtSelectedFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelectUmpireParamFile))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelInTabSeParamsLayout.setVerticalGroup(
            panelInTabSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInTabSeParamsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInTabSeParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSelectedFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectUmpireParamFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSeParams, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        tabPane.addTab("Umpire Params", panelInTabSeParams);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Sequence database"));

        btnBrowseDatabasePath.setText("Browse");
        btnBrowseDatabasePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseDatabasePathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtDatabasePath)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBrowseDatabasePath)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBrowseDatabasePath)
                    .addComponent(txtDatabasePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSelectCometParamsFile.setText("Browse");
        btnSelectCometParamsFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectCometParamsFileActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Mass tolerance"));

        jLabel14.setText("peptide_mass_tolerance");

        fmtpeptide_mass_tolerance.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        fmtpeptide_mass_tolerance.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtpeptide_mass_tolerance.setPreferredSize(new java.awt.Dimension(50, 20));

        jLabel20.setText("(ppm)");

        jLabel21.setText("fragment_bin_tol");

        fmtfragment_bin_tol.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtfragment_bin_tol.setPreferredSize(new java.awt.Dimension(50, 20));

        jLabel22.setText("fragment_bin_offset");

        fmtfragment_bin_offset.setMinimumSize(new java.awt.Dimension(50, 20));
        fmtfragment_bin_offset.setPreferredSize(new java.awt.Dimension(50, 20));
        fmtfragment_bin_offset.setRequestFocusEnabled(false);

        jLabel23.setText("theoretical_fragment_ions");

        fmttheoretical_fragment_ions.setMinimumSize(new java.awt.Dimension(50, 20));
        fmttheoretical_fragment_ions.setPreferredSize(new java.awt.Dimension(50, 20));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel22)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(fmtpeptide_mass_tolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20))
                    .addComponent(fmtfragment_bin_tol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fmtfragment_bin_offset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fmttheoretical_fragment_ions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(253, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(fmtpeptide_mass_tolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(fmtfragment_bin_tol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(fmtfragment_bin_offset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(fmttheoretical_fragment_ions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout panelInTabCometParamsLayout = new javax.swing.GroupLayout(panelInTabCometParams);
        panelInTabCometParams.setLayout(panelInTabCometParamsLayout);
        panelInTabCometParamsLayout.setHorizontalGroup(
            panelInTabCometParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInTabCometParamsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInTabCometParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInTabCometParamsLayout.createSequentialGroup()
                        .addComponent(txtCometParamsFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelectCometParamsFile))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelInTabCometParamsLayout.setVerticalGroup(
            panelInTabCometParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInTabCometParamsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInTabCometParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelectCometParamsFile)
                    .addComponent(txtCometParamsFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );

        tabPane.addTab("Comet Params", panelInTabCometParams);

        btnRun.setText("Run");
        btnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");

        btnClearConsole.setText("Clear console");
        btnClearConsole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearConsoleActionPerformed(evt);
            }
        });

        consoleScrollPane.setViewportView(console);

        jLabel24.setText("RAM");

        spinnerRam.setModel(new javax.swing.SpinnerNumberModel(4, 1, null, 1));

        jLabel25.setText("Threads");
        jLabel25.setToolTipText("Set to zero to use all CPU cores");

        spinnerThreads.setModel(new javax.swing.SpinnerNumberModel());
        spinnerThreads.setToolTipText("Set to zero to use all CPU cores");
        spinnerThreads.setMinimumSize(new java.awt.Dimension(35, 20));

        javax.swing.GroupLayout panelRunLayout = new javax.swing.GroupLayout(panelRun);
        panelRun.setLayout(panelRunLayout);
        panelRunLayout.setHorizontalGroup(
            panelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRunLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(consoleScrollPane)
                    .addGroup(panelRunLayout.createSequentialGroup()
                        .addComponent(btnRun)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinnerRam, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinnerThreads, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                        .addComponent(btnClearConsole)))
                .addContainerGap())
        );
        panelRunLayout.setVerticalGroup(
            panelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRunLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRun)
                    .addComponent(btnCancel)
                    .addComponent(btnClearConsole)
                    .addComponent(jLabel24)
                    .addComponent(spinnerRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(spinnerThreads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(consoleScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabPane.addTab("Run", panelRun);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPane)
        );

        tabPane.getAccessibleContext().setAccessibleName("Umpire SE Params");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectRawFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectRawFilesActionPerformed
        if (btnSelectRawFiles == evt.getSource()) {
            String approveText = "Select";
            JFileChooser fc = new JFileChooser();
            fc.setAcceptAllFileFilterUsed(true);
            fc.setApproveButtonText(approveText);
            fc.setDialogTitle("Choose raw data files");
            fc.setMultiSelectionEnabled(true);
            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);

            setFilechooserPathToCached(fc);

//            List<String> filePaths = splitTrim(txtFileIn.getText().trim(), ",");
//            for (int i = 0; i < filePaths.size(); i++) {
//                String filePath = filePaths.get(i);
//                Path p = Paths.get(filePath).toAbsolutePath();
//                if (Files.exists(p)) {
//                    fc.setSelectedFile(p.toFile());
//                }
//            }

            int retVal = fc.showDialog(this, approveText);
            if (retVal == JFileChooser.APPROVE_OPTION) {
                File[] files = fc.getSelectedFiles();
                for (File f : files) {
                    txtAreaSelectedFiles.append(f.toString() + "\n");
                }
                if (files.length > 0) {
                    saveFilechooserPathToCached(files[0]);
                }

            } else {

            }
        }
    }//GEN-LAST:event_btnSelectRawFilesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        txtAreaSelectedFiles.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void fmtMinNoPeakClusterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fmtMinNoPeakClusterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fmtMinNoPeakClusterActionPerformed

    private void btnSelectUmpireParamFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectUmpireParamFileActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter fileNameExtensionFilter = new FileNameExtensionFilter("Umpire .params files", "params");
        fileChooser.setFileFilter(fileNameExtensionFilter);
        fileChooser.setApproveButtonText("Select file");
        fileChooser.setApproveButtonToolTipText("Load params from this file into the GUI");
        fileChooser.setDialogTitle("Choose Umpire SE param file");
        fileChooser.setMultiSelectionEnabled(false);
        
        setFilechooserPathToCached(fileChooser);
        
        int openDialog = fileChooser.showOpenDialog(this);
        switch (openDialog) {
            case JFileChooser.APPROVE_OPTION:
                File file = fileChooser.getSelectedFile();
                txtSelectedFile.setText(Paths.get(file.getAbsolutePath()).toString());
                saveFilechooserPathToCached(file);

                UmpireParams params = parseUmpireParamsFile(file);
                if (params == null) {
                    JOptionPane.showMessageDialog(this, "Could not load params file", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                boolean containsWindowType = params.containsKey("WindowType");
                if (!containsWindowType) {
                    JOptionPane.showMessageDialog(this, "Parameter file loaded, but did not contain WindowType", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                fillInUmpireParams(params);
                break;
        }

    }//GEN-LAST:event_btnSelectUmpireParamFileActionPerformed

    private void fmtRFmaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fmtRFmaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fmtRFmaxActionPerformed

    private void setFilechooserPathToCached(JFileChooser fileChooser) {
        ThisAppProps thisAppProps = ThisAppProps.loadFromTemp();
        if (thisAppProps == null)
            return;
        String inputPath = thisAppProps.getProperty(ThisAppProps.PROP_FILE_IN);
        if (inputPath != null) {
            File file = Paths.get(inputPath).toFile();
            fileChooser.setCurrentDirectory(file);
        }
    }

    private void saveFilechooserPathToCached(File file) {
        ThisAppProps thisAppProps = ThisAppProps.loadFromTemp();
        if (thisAppProps == null)
            thisAppProps = new ThisAppProps();
        thisAppProps.setProperty(ThisAppProps.PROP_FILE_IN, file.getAbsolutePath());
        thisAppProps.save();
    }

    private void btnSelectCometParamsFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectCometParamsFileActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter fileNameExtensionFilter = new FileNameExtensionFilter("Comet .params files", "params");
        fileChooser.setFileFilter(fileNameExtensionFilter);
        fileChooser.setApproveButtonText("Select file");
        fileChooser.setApproveButtonToolTipText("Load params from this file into the GUI");
        fileChooser.setDialogTitle("Choose Comet param file");
        fileChooser.setMultiSelectionEnabled(false);

        setFilechooserPathToCached(fileChooser);

        int openDialog = fileChooser.showOpenDialog(this);
        switch (openDialog) {
            case JFileChooser.APPROVE_OPTION:
                File file = fileChooser.getSelectedFile();
                txtCometParamsFile.setText(Paths.get(file.getAbsolutePath()).toString());
                saveFilechooserPathToCached(file);
                try {
                    CometParams cometParams = loadCometParamsFile(file);
                    fillCometParamFields(cometParams);
                } catch (ParsingException e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                break;
        }
    }//GEN-LAST:event_btnSelectCometParamsFileActionPerformed

    private void btnBrowseDatabasePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseDatabasePathActionPerformed

    }//GEN-LAST:event_btnBrowseDatabasePathActionPerformed

    private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed
        ExecutorService exec = Executors.newSingleThreadExecutor();
        final TextConsole textConsole = console;
        exec.submit(new Runnable() {
            @Override
            public void run() {
                for (int i = 0; i < 200; i++) {
                    try {
                        console.append("Some text\n");

                        Thread.sleep(200L);
                    } catch (IOException ignore) {

                    } catch (InterruptedException ex) {
                    }
                }
            }
        });
    }//GEN-LAST:event_btnRunActionPerformed



    private void btnClearConsoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearConsoleActionPerformed
        console.setText("");
    }//GEN-LAST:event_btnClearConsoleActionPerformed

    private CometParams loadCometParamsFile(File file) throws ParsingException {
        try (FileInputStream fis = new FileInputStream(file)) {
            CometParams params = CometParams.parse(fis);
//            if (params.getFirstLine() == null || params.getFirstLine().isEmpty()) {
//                throw new ParsingException("The first line of the comet params file can't be empty.");
//            }
//            if (params.getCometEnzymeInfos().isEmpty()) {
//                throw new ParsingException("COMET_ENZYME_INFO table was not found");
//            }
            return params;
        } catch (FileNotFoundException ex) {
            throw new ParsingException(ex);
        } catch (IOException ex) {
            throw new ParsingException(ex);
        }
    }

    private void fillCometParamFields(CometParams cometParams) throws ParsingException {
        Properties props = cometParams.getProps();

        String databasePath  = props.getProperty(CometParams.PROP_database_name);
        if (databasePath == null) {
            //throw new ParsingException("Could not find database path in the parsed properties");
        } else {
            txtDatabasePath.setText(databasePath);
        }

        fmtpeptide_mass_tolerance.setText(props.getProperty(CometParams.PROP_peptide_mass_tolerance));
        fmtfragment_bin_tol.setText(props.getProperty(CometParams.PROP_fragment_bin_tol));
        fmtfragment_bin_offset.setText(props.getProperty(CometParams.PROP_fragment_bin_offset));
        fmttheoretical_fragment_ions.setText(props.getProperty(CometParams.PROP_theoretical_fragment_ions));
    }

    private static List<String> splitTrim(String input, String sep) {
        String[] split = input.split(sep);
        List<String> strings = new ArrayList<>(split.length);
        for (int i = 0; i < split.length; i++) {
            split[i] = split[i].trim();
            if (!split[i].isEmpty()) {
                strings.add(split[i]);
            }
        }
        return strings;
    }

    private UmpireParams parseUmpireParamsFile(File f) {
        UmpireParams params = new UmpireParams();
        try (BufferedInputStream bis = new BufferedInputStream(new FileInputStream(f))) {
            params.load(bis);
            return params;
        } catch (IOException ex) {
            Logger.getLogger(UmpireUnargetedDbSearchFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    private void fillInUmpireParams(UmpireParams params) {
        fmtRPmax.setText(params.getProperty(UmpireParams.PROP_RPmax));
        fmtRFmax.setText(params.getProperty(UmpireParams.PROP_RFmax));
        fmtCorrThreshold.setText(params.getProperty(UmpireParams.PROP_CorrThreshold));
        fmtDeltaApex.setText(params.getProperty(UmpireParams.PROP_DeltaApex));
        fmtRTOverlap.setText(params.getProperty(UmpireParams.PROP_RTOverlap));
        chkAdjustFragIntensity.setSelected(params.getAdjustFragIntensity());
        chkBoostComplementaryIon.setSelected(params.getBoostComplementaryIon());

        fmtMS1PPM.setText(params.getProperty(UmpireParams.PROP_MS1PPM));
        fmtMS2PPM.setText(params.getProperty(UmpireParams.PROP_MS2PPM));
        fmtSN.setText(params.getProperty(UmpireParams.PROP_SN));
        fmtMS2SN.setText(params.getProperty(UmpireParams.PROP_MS2SN));
        fmtMinMSIntensity.setText(params.getProperty(UmpireParams.PROP_MinMSIntensity));
        fmtMinMSMSIntensity.setText(params.getProperty(UmpireParams.PROP_MinMSMSIntensity));
        fmtMaxCurveRTRange.setText(params.getProperty(UmpireParams.PROP_MaxCurveRTRange));
        fmtNoMissedScan.setText(params.getProperty(UmpireParams.PROP_NoMissedScan));
        fmtMinFrag.setText(params.getProperty(UmpireParams.PROP_MinFrag));
        chkEstimateBG.setSelected(Boolean.valueOf(params.getProperty(UmpireParams.PROP_EstimateBG)));
        fmtMinNoPeakCluster.setText(params.getProperty(UmpireParams.PROP_MinNoPeakCluster));
        fmtMaxNoPeakCluster.setText(params.getProperty(UmpireParams.PROP_MaxNoPeakCluster));


        fmtWindowSize.setText(params.getProperty(UmpireParams.PROP_WindowSize));
        //.setText(params.getProperty(UmpireParams.PROP_));


    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UmpireUnargetedDbSearchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UmpireUnargetedDbSearchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UmpireUnargetedDbSearchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UmpireUnargetedDbSearchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UmpireUnargetedDbSearchFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowseDatabasePath;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClearConsole;
    private javax.swing.JButton btnRun;
    private javax.swing.JButton btnSelectCometParamsFile;
    private javax.swing.JButton btnSelectRawFiles;
    private javax.swing.JButton btnSelectUmpireParamFile;
    private javax.swing.JCheckBox chkAdjustFragIntensity;
    private javax.swing.JCheckBox chkBoostComplementaryIon;
    private javax.swing.JCheckBox chkEstimateBG;
    private dia.umpire.gui.TextConsole console;
    private javax.swing.JScrollPane consoleScrollPane;
    private javax.swing.JFormattedTextField fmtCorrThreshold;
    private javax.swing.JFormattedTextField fmtDeltaApex;
    private javax.swing.JFormattedTextField fmtMS1PPM;
    private javax.swing.JFormattedTextField fmtMS2PPM;
    private javax.swing.JFormattedTextField fmtMS2SN;
    private javax.swing.JFormattedTextField fmtMaxCurveRTRange;
    private javax.swing.JFormattedTextField fmtMaxNoPeakCluster;
    private javax.swing.JFormattedTextField fmtMinFrag;
    private javax.swing.JFormattedTextField fmtMinMSIntensity;
    private javax.swing.JFormattedTextField fmtMinMSMSIntensity;
    private javax.swing.JFormattedTextField fmtMinNoPeakCluster;
    private javax.swing.JFormattedTextField fmtNoMissedScan;
    private javax.swing.JFormattedTextField fmtRFmax;
    private javax.swing.JFormattedTextField fmtRPmax;
    private javax.swing.JFormattedTextField fmtRTOverlap;
    private javax.swing.JFormattedTextField fmtSN;
    private javax.swing.JFormattedTextField fmtWindowSize;
    private javax.swing.JFormattedTextField fmtfragment_bin_offset;
    private javax.swing.JFormattedTextField fmtfragment_bin_tol;
    private javax.swing.JFormattedTextField fmtpeptide_mass_tolerance;
    private javax.swing.JFormattedTextField fmttheoretical_fragment_ions;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNoMissedScan;
    private javax.swing.JPanel panelInTabCometParams;
    private javax.swing.JPanel panelInTabSeParams;
    private javax.swing.JPanel panelInTabSelectFiles;
    private javax.swing.JPanel panelRun;
    private javax.swing.JPanel panelSeParams;
    private javax.swing.JSpinner spinnerRam;
    private javax.swing.JSpinner spinnerThreads;
    private javax.swing.JTabbedPane tabPane;
    private javax.swing.JTextArea txtAreaSelectedFiles;
    private javax.swing.JTextField txtCometParamsFile;
    private javax.swing.JTextField txtDatabasePath;
    private javax.swing.JTextField txtSelectedFile;
    // End of variables declaration//GEN-END:variables

}
